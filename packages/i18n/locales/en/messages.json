{
  "app_metadata_description": {
    "description": "Extension description",
    "message": "Automate web tasks with AI! NanoBrowser is an open-source Chrome extension that lets you extract data, fill forms, and more."
  },
  "app_metadata_name": {
    "description": "Extension name",
    "message": "Nanobrowser: AI Web Agent & Automation"
  },
  "nav_newChat_a11y": {
    "message": "New Chat"
  },
  "nav_loadHistory_a11y": {
    "message": "Load History"
  },
  "nav_settings_a11y": {
    "message": "Settings"
  },
  "nav_back": {
    "message": "← Back"
  },
  "nav_back_a11y": {
    "message": "Back to chat"
  },
  "welcome_title": {
    "message": "Welcome to Nanobrowser!"
  },
  "welcome_instruction": {
    "message": "To get started, please configure your API keys in the settings page."
  },
  "welcome_openSettings": {
    "message": "Open Settings"
  },
  "welcome_quickStart": {
    "message": "Quick Start Guide"
  },
  "welcome_joinCommunity": {
    "message": "Join Our Community"
  },
  "status_checkingConfig": {
    "message": "Checking configuration..."
  },
  "chat_buttons_stop": {
    "message": "Stop"
  },
  "chat_buttons_replay": {
    "message": "Replay"
  },
  "chat_buttons_send": {
    "message": "Send"
  },
  "chat_input_placeholder": {
    "message": "What can I help you with?"
  },
  "chat_input_form": {
    "message": "Chat input form"
  },
  "chat_input_editor": {
    "message": "Message input"
  },
  "chat_history_title": {
    "message": "Chat History"
  },
  "chat_history_empty": {
    "message": "No chat history available"
  },
  "chat_history_bookmark": {
    "message": "Bookmark session"
  },
  "chat_history_delete": {
    "message": "Delete session"
  },
  "chat_bookmarks_header": {
    "message": "Quick Start"
  },
  "chat_bookmarks_saveEdit": {
    "message": "Save changes"
  },
  "chat_bookmarks_cancelEdit": {
    "message": "Cancel changes"
  },
  "chat_bookmarks_edit": {
    "message": "Edit bookmark title"
  },
  "chat_bookmarks_delete": {
    "message": "Delete bookmark"
  },
  "chat_replay_starting": {
    "message": "Starting replay of task:\n\n\"$TASK$\"",
    "placeholders": {
      "task": {
        "content": "$1",
        "example": "Navigate to example.com"
      }
    }
  },
  "chat_replay_failed": {
    "message": "Replay failed: $ERROR_MESSAGE$",
    "placeholders": {
      "error_message": {
        "content": "$1",
        "example": "Connection timeout"
      }
    }
  },
  "chat_replay_invalidArgs": {
    "message": "Invalid arguments. Please use the format: /replay <historySessionId>"
  },
  "chat_replay_disabled": {
    "message": "Replay is disabled in general settings. Please enable \"Replay Historical Tasks\" in the extension settings to use this feature."
  },
  "chat_replay_noHistory": {
    "message": "No action history found for session \"$SESSION_ID$...\". This session may not contain replayable actions.\n\nIt's a replay session itself (replay sessions cannot be replayed again), or it was created before the replay feature was available.",
    "placeholders": {
      "session_id": {
        "content": "$1",
        "example": "abc123def456789"
      }
    }
  },
  "chat_stt_processing": {
    "message": "Processing speech..."
  },
  "chat_stt_recording_stop": {
    "message": "Stop recording"
  },
  "chat_stt_input_start": {
    "message": "Start voice input"
  },
  "chat_stt_processingFailed": {
    "message": "Failed to process speech recording"
  },
  "chat_stt_model_notFound": {
    "message": "No speech-to-text model configured or not a Gemini model. Please configure a Gemini model in settings."
  },
  "chat_stt_recognitionFailed": {
    "message": "Speech recognition failed"
  },
  "chat_stt_microphone_permissionDenied": {
    "message": "Microphone access denied. Please enable microphone permissions in Chrome settings."
  },
  "chat_stt_microphone_accessFailed": {
    "message": "Failed to access microphone. "
  },
  "chat_stt_microphone_grantPermission": {
    "message": "Please grant microphone permission."
  },
  "chat_stt_microphone_notFound": {
    "message": "No microphone found."
  },
  "permissions_microphone_title": {
    "message": "Enable Voice Input"
  },
  "permissions_microphone_description": {
    "message": "Nanobrowser needs microphone access to convert your speech to text."
  },
  "permissions_microphone_grantButton": {
    "message": "Grant Microphone Permission"
  },
  "permissions_microphone_requesting": {
    "message": "Requesting microphone permission..."
  },
  "permissions_microphone_grantedSuccess": {
    "message": "✅ Microphone permission granted! You can now use voice input."
  },
  "permissions_microphone_grantedButton": {
    "message": "Permission Granted"
  },
  "permissions_microphone_denied": {
    "message": "Permission denied. "
  },
  "permissions_microphone_allowHelp": {
    "message": "Please click \"Allow\" when prompted for microphone access."
  },
  "permissions_microphone_notFound": {
    "message": "No microphone found. Please check your audio devices."
  },
  "permissions_microphone_alreadyGranted": {
    "message": "✅ Microphone permission already granted!"
  },
  "permissions_microphone_alreadyGrantedButton": {
    "message": "Permission Already Granted"
  },
  "options_nav_header": {
    "message": "Settings"
  },
  "options_tabs_general": {
    "message": "General"
  },
  "options_tabs_models": {
    "message": "Models"
  },
  "options_tabs_firewall": {
    "message": "Firewall"
  },
  "options_tabs_help": {
    "message": "Help"
  },
  "options_general_header": {
    "message": "General"
  },
  "options_general_maxSteps": {
    "message": "Max Steps per Task"
  },
  "options_general_maxSteps_desc": {
    "message": "Step limit per task"
  },
  "options_general_maxActions": {
    "message": "Max Actions per Step"
  },
  "options_general_maxActions_desc": {
    "message": "Action limit per step"
  },
  "options_general_maxFailures": {
    "message": "Failure Tolerance"
  },
  "options_general_maxFailures_desc": {
    "message": "How many consecutive failures before stopping"
  },
  "options_general_enableVision": {
    "message": "Enable Vision"
  },
  "options_general_enableVision_desc": {
    "message": "Use vision capability of LLMs (consumes more tokens for better results)"
  },
  "options_general_displayHighlights": {
    "message": "Display Highlights"
  },
  "options_general_displayHighlights_desc": {
    "message": "Show visual highlights on interactive elements (e.g. buttons, links, etc.)"
  },
  "options_general_planningInterval": {
    "message": "Replanning Frequency"
  },
  "options_general_planningInterval_desc": {
    "message": "Reconsider and update the plan every [Number] steps"
  },
  "options_general_minWaitPageLoad": {
    "message": "Page Load Wait Time"
  },
  "options_general_minWaitPageLoad_desc": {
    "message": "Minimum wait time after page loads (250-5000ms)"
  },
  "options_general_replayHistoricalTasks": {
    "message": "Replay Historical Tasks( experimental )"
  },
  "options_general_replayHistoricalTasks_desc": {
    "message": "Enable storing and replaying of agent step history (experimental, may have issues)"
  },

  "options_models_providers_header": {
    "message": "LLM Providers"
  },
  "options_models_providers_notConfigured": {
    "message": "No providers configured yet. Add a provider to get started."
  },
  "options_models_providers_btnCancel": {
    "message": "Cancel"
  },
  "options_models_providers_btnSave": {
    "message": "Save"
  },
  "options_models_providers_btnDelete": {
    "message": "Delete"
  },
  "options_models_providers_setupInstructions": {
    "message": "Enter your API key and click Save to set it up."
  },
  "options_models_providers_custom_name": {
    "message": "Name"
  },
  "options_models_providers_custom_name_desc": {
    "message": "Provider name (spaces are not allowed when saving)"
  },
  "options_models_providers_custom_name_placeholder": {
    "message": "Provider name"
  },

  "options_models_providers_apiKey": {
    "message": "API Key"
  },
  "options_models_providers_apiKey_placeholder_optional": {
    "message": "API Key (optional)"
  },
  "options_models_providers_apiKey_placeholder_required": {
    "message": "API Key (required)"
  },
  "options_models_providers_apiKey_placeholder_ollama": {
    "message": "API Key (leave empty for Ollama)"
  },
  "options_models_providers_apiKey_hide": {
    "message": "Hide API key"
  },
  "options_models_providers_apiKey_show": {
    "message": "Show API key"
  },

  "options_models_selection_header": {
    "message": "Model Selection"
  },
  "options_models_speechToText_header": {
    "message": "Speech-to-Text Model"
  },

  "options_models_agents_navigator": {
    "message": "Navigates websites and performs actions"
  },
  "options_models_agents_planner": {
    "message": "Develops and refines strategies to complete tasks"
  },
  "options_models_agents_validator": {
    "message": "Checks if tasks are completed successfully"
  },

  "options_models_labels_model": {
    "message": "Model"
  },
  "options_models_labels_temperature": {
    "message": "Temperature"
  },
  "options_models_labels_topP": {
    "message": "Top P"
  },
  "options_models_labels_reasoning": {
    "message": "Reasoning"
  },
  "options_models_stt_desc": {
    "message": "Configure the Gemini model used for converting speech to text when using the microphone feature."
  },
  "options_models_chooseModel": {
    "message": "Choose Model"
  },
  "options_models_addNewProvider": {
    "message": "Add New Provider"
  },
  "options_models_providers_openaiCompatible": {
    "message": "OpenAI-compatible API Provider"
  },
  "options_models_providers_baseUrl": {
    "message": "Base URL"
  },
  "options_models_providers_endpoint": {
    "message": "Endpoint"
  },
  "options_models_providers_deployment": {
    "message": "Deployment"
  },
  "options_models_providers_apiVersion": {
    "message": "API Version"
  },
  "options_models_providers_models": {
    "message": "Models"
  },
  "options_models_providers_placeholders_baseUrl_custom": {
    "message": "Required OpenAI-compatible API endpoint"
  },
  "options_models_providers_placeholders_baseUrl_azure": {
    "message": "https://YOUR_RESOURCE_NAME.openai.azure.com/"
  },
  "options_models_providers_placeholders_baseUrl_openrouter": {
    "message": "OpenRouter Base URL (optional, defaults to https://openrouter.ai/api/v1)"
  },
  "options_models_providers_placeholders_baseUrl_llama": {
    "message": "Llama API Base URL (defaults to https://api.llama.com/v1)"
  },
  "options_models_providers_placeholders_baseUrl_ollama": {
    "message": "Ollama base URL"
  },
  "options_models_providers_placeholders_azureDeployment": {
    "message": "Enter Azure model name (e.g. gpt-4o, gpt-4o-mini)"
  },
  "options_models_providers_placeholders_azureApiVersion": {
    "message": "e.g., 2024-02-15-preview"
  },
  "options_models_providers_deployment_desc": {
    "message": "Type model name and press Enter or Space to set. Deployment name should match OpenAI model name (e.g., gpt-4o) for best compatibility."
  },
  "options_models_providers_models_instructions": {
    "message": "Type and Press Enter or Space to add."
  },
  "options_models_providers_models_openrouter_empty": {
    "message": "No models selected. Add model names manually if needed."
  },
  "options_models_providers_ollama_reminder": {
    "message": "environment variable MUST be set for the Ollama server."
  },
  "options_models_providers_ollama_learnMore": {
    "message": "Learn more"
  },
  "options_models_providers_errors_spacesNotAllowed": {
    "message": "Spaces are not allowed in provider names. Please use underscores or other characters instead."
  },
  "options_models_providers_errors_baseUrlRequired": {
    "message": "Base URL is required for $PROVIDER$. Please enter it.",
    "placeholders": {
      "provider": {
        "content": "$1",
        "example": "Custom OpenAI"
      }
    }
  },

  "options_firewall_header": {
    "message": "Firewall"
  },
  "options_firewall_enableToggle": {
    "message": "Enable Firewall"
  },
  "options_firewall_toggleFirewall_a11y": {
    "message": "Toggle Firewall"
  },
  "options_firewall_allowList_header": {
    "message": "Allow List"
  },
  "options_firewall_allowList_empty": {
    "message": "No domains in allow list. Empty allow list means all non-denied domains are allowed."
  },
  "options_firewall_denyList_header": {
    "message": "Deny List"
  },
  "options_firewall_denyList_empty": {
    "message": "No domains in deny list"
  },
  "options_firewall_placeholders_domainUrl": {
    "message": "Enter domain or URL (e.g. example.com, localhost, 127.0.0.1)"
  },
  "options_firewall_btnAdd": {
    "message": "Add"
  },
  "options_firewall_btnRemove": {
    "message": "Remove"
  },
  "options_firewall_howItWorks_header": {
    "message": "How the Firewall Works"
  },
  "options_firewall_howItWorks": {
    "message": "The firewall contains a deny list and an allow list.\nIf both lists are empty, all URLs are allowed\nDeny list takes priority - if a URL matches any deny list entry, it's blocked\nWhen allow list is empty, all non-denied URLs are allowed\nWhen allow list is not empty, only matching URLs are allowed\nWildcards are NOT supported yet\nAllow list is preferred over deny list"
  },
  "errors_unknown": {
    "message": "Unknown error occurred"
  },
  "errors_conn_serviceWorker": {
    "message": "Failed to connect to service worker"
  },
  "errors_unsupportedCommand": {
    "message": "Unsupported command: $COMMAND$.\n\nAvailable commands: /state, /nohighlight, /replay <historySessionId>",
    "placeholders": {
      "command": {
        "content": "$1",
        "example": "/unknown"
      }
    }
  },

  "bg_errors_noTask": {
    "message": "No task provided"
  },
  "bg_errors_noTabId": {
    "message": "No tab ID provided"
  },
  "bg_errors_noFollowUpTask": {
    "message": "No follow up task provided"
  },
  "bg_errors_executorCleanedUp": {
    "message": "Executor was cleaned up, can not add follow-up task"
  },
  "bg_errors_noTaskToCancel": {
    "message": "No task to cancel"
  },
  "bg_errors_noTaskToResume": {
    "message": "No task to resume"
  },
  "bg_errors_noTaskToPause": {
    "message": "No task to pause"
  },
  "bg_errors_statePrinted": {
    "message": "State printed to console"
  },
  "bg_errors_failedGetState": {
    "message": "Failed to get state"
  },
  "bg_errors_highlightRemoved": {
    "message": "highlight removed"
  },
  "bg_errors_noAudioData": {
    "message": "No audio data provided"
  },
  "bg_errors_speechRecognitionFailed": {
    "message": "Speech recognition failed"
  },
  "bg_errors_noTaskId": {
    "message": "No task ID provided"
  },
  "bg_errors_noHistorySessionId": {
    "message": "No history session ID provided"
  },
  "bg_errors_replayFailed": {
    "message": "Replay failed"
  },
  "bg_errors_unknownMessageType": {
    "message": "Unknown message type"
  },
  "bg_errors_unknownError": {
    "message": "Unknown error"
  },
  "bg_setup_configureApiKeys": {
    "message": "Please configure API keys in the settings first"
  },
  "bg_setup_providerNotFound": {
    "message": "Provider $PROVIDER$ not found in the settings",
    "placeholders": {
      "provider": {
        "content": "$1",
        "example": "openai"
      }
    }
  },
  "bg_setup_chooseNavigatorModel": {
    "message": "Please choose a model for the navigator in the settings first"
  },
  "exec_errors_tooManyValidationFailures": {
    "message": "Too many failures of validation"
  },
  "exec_errors_maxStepsReached": {
    "message": "Task failed: Max steps reached"
  },
  "exec_errors_taskCancelled": {
    "message": "Task cancelled"
  },
  "exec_errors_taskPaused": {
    "message": "Task paused"
  },
  "exec_errors_maxFailuresReached": {
    "message": "Max failures reached"
  },
  "exec_errors_historyNotFound": {
    "message": "History not found"
  },
  "exec_errors_historyEmpty": {
    "message": "History is empty"
  },
  "exec_errors_replayCancelled": {
    "message": "Replay cancelled"
  },
  "exec_errors_replayCompleted": {
    "message": "Replay completed"
  },
  "exec_errors_taskFailed": {
    "message": "Task failed: $ERROR_MESSAGE$",
    "placeholders": {
      "error_message": {
        "content": "$1",
        "example": "Connection timeout"
      }
    }
  },
  "exec_errors_replayFailed": {
    "message": "Replay failed: $ERROR_MESSAGE$",
    "placeholders": {
      "error_message": {
        "content": "$1",
        "example": "Network error"
      }
    }
  }
}
